volumes:
  postgres_data:
  redis_data:

services:
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    container_name: nginx
    depends_on:
      - nest
      - next
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./scripts/nginx:/etc/nginx
      - /etc/ssl/flight-booking-system:/etc/ssl
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
  nest:
    image: ghcr.io/xiifain/flight-booking-system-backend:latest
    deploy:
      replicas: 4
    depends_on:
      - postgres
      - redis
    links:
      - postgres:postgres
      - redis:redis
    env_file:
      - .env
  postgres:
    image: postgres:16.3-alpine
    container_name: flight-booking-system-postgres
    ports:
      - '${POSTGRES_PORT}:${POSTGRES_PORT}'
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - type: volume
        source: postgres_data
        target: /var/lib/postgresql/data
  redis:
    image: redis:7.0.10-alpine
    container_name: flight-booking-system-redis
    command: --port ${REDIS_PORT}
    volumes:
      - type: volume
        source: redis_data
        target: /data
  next:
    image: ghcr.io/xiifain/flight-booking-system-frontend:latest
    deploy:
      replicas: 4
